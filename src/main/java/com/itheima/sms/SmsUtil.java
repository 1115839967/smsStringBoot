package com.itheima.sms;

import com.aliyuncs.DefaultAcsClient; 
import com.aliyuncs.IAcsClient; 
import com.aliyuncs.dysmsapi.model.v20170525.QuerySendDetailsRequest; 
import com.aliyuncs.dysmsapi.model.v20170525.QuerySendDetailsResponse; 
import com.aliyuncs.dysmsapi.model.v20170525.SendSmsRequest; 
import com.aliyuncs.dysmsapi.model.v20170525.SendSmsResponse; 
import com.aliyuncs.exceptions.ClientException; 
import com.aliyuncs.profile.DefaultProfile; 
import com.aliyuncs.profile.IClientProfile; 
import java.text.SimpleDateFormat; 
import java.util.Date; 
import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.core.env.Environment; 
import org.springframework.stereotype.Component; 
/** 
 * 短信工具类 
 * @author Administrator 
 * 
 */ 
@Component 
public class SmsUtil { 
 
    //产品名称:云通信短信 API 产品,开发者无需替换 
    static final String product = "Dysmsapi"; 
    //产品域名,开发者无需替换 
    static final String domain = "dysmsapi.aliyuncs.com"; 
     
    @Autowired 
    private Environment env; 
 
    // TODO 此处需要替换成开发者自己的 AK(在阿里云访问控制台寻找) 
     
    /** 
     * 发送短信 
     * @param mobile 手机号 
     * @param template_code 模板号 
     * @param sign_name 签名 
     * @param param 参数 
     * @return 
     * @throws ClientException 
     */ 
    public SendSmsResponse sendSms(String mobile,String template_code,String 
    									sign_name,String code) throws ClientException { 
 
     String accessKeyId =env.getProperty("accessKeyId"); 
        String accessKeySecret = env.getProperty("accessKeySecret"); 
      
        //可自助调整超时时间 
        System.setProperty("sun.net.client.defaultConnectTimeout", "10000"); 
        System.setProperty("sun.net.client.defaultReadTimeout", "10000"); 
 
        //初始化 acsClient,暂不支持 region 化 
        IClientProfile profile = DefaultProfile.getProfile("cn-hangzhou", accessKeyId, 
accessKeySecret); 
        DefaultProfile.addEndpoint("cn-hangzhou", "cn-hangzhou", product, domain); 
        IAcsClient acsClient = new DefaultAcsClient(profile); 
 
        //组装请求对象-具体描述见控制台-文档部分内容 
        SendSmsRequest request = new SendSmsRequest();
        //必填:待发送手机号 
        request.setPhoneNumbers(mobile); 
        //必填:短信签名-可在短信控制台中找到 
        request.setSignName(sign_name); 
        //必填:短信模板-可在短信控制台中找到 
        request.setTemplateCode(template_code); 
        //可选:模板中的变量替换 JSON 串,如模板内容为"亲爱的${name},您的验证码为${code}"时,此处的值为 

        request.setTemplateParam("{\"code\":\""+code+"\"}"); 
 
        //选填-上行短信扩展码(无特殊需求用户请忽略此字段) 
        //request.setSmsUpExtendCode("90997"); 
 
        //可选:outId 为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者 
        request.setOutId("yourOutId"); 
 
        //hint 此处可能会抛出异常，注意 catch 
        SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request); 
 
        return sendSmsResponse; 
    } 
 
    public  QuerySendDetailsResponse querySendDetails(String mobile,String bizId) 
throws ClientException { 
     String accessKeyId =env.getProperty("accessKeyId"); 
     String accessKeySecret = env.getProperty("accessKeySecret"); 
     //可自助调整超时时间 
     System.setProperty("sun.net.client.defaultConnectTimeout", "10000"); 
     System.setProperty("sun.net.client.defaultReadTimeout", "10000"); 
     //初始化 acsClient,暂不支持 region 化 
     IClientProfile profile = DefaultProfile.getProfile("cn-hangzhou", accessKeyId, 
accessKeySecret); 
     DefaultProfile.addEndpoint("cn-hangzhou", "cn-hangzhou", product, domain); 
     IAcsClient acsClient = new DefaultAcsClient(profile); 
     //组装请求对象 
     QuerySendDetailsRequest request = new QuerySendDetailsRequest(); 
     //必填-号码 
     request.setPhoneNumber(mobile); 
     //可选-流水号 
     request.setBizId(bizId); 
     //必填-发送日期 支持 30 天内记录查询，格式 yyyyMMdd 
     SimpleDateFormat ft = new SimpleDateFormat("yyyyMMdd"); 
     request.setSendDate(ft.format(new Date())); 
     //必填-页大小 
     request.setPageSize(10L); 
     //必填-当前页码从 1 开始计数 
     request.setCurrentPage(1L); 
     //hint 此处可能会抛出异常，注意 catch 
     QuerySendDetailsResponse querySendDetailsResponse =  acsClient.getAcsResponse(request); 
    		
     return querySendDetailsResponse; 
 } 
} 